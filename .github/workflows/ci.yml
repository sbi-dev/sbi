name: Continuous Integration

on: [pull_request, workflow_dispatch]

defaults:
  run:
    shell: bash

concurrency:
  group: ${{ github.workflow }}-${{ github.head_ref || github.ref }}
  cancel-in-progress: true

jobs:
  ci:
    name: Continuous Integration
    runs-on: ubuntu-latest
    if: |
      github.event_name == 'push' ||
      (github.event_name == 'pull_request' && github.event.pull_request.draft == false)
    strategy:
      fail-fast: false
      matrix:
        python-version: ['3.10']
        split_size: [4]
        group_number: [1, 2, 3, 4]

    steps:
    - name: Checkout
      uses: actions/checkout@v4
      with:
        fetch-depth: 0
        lfs: false

    - name: Install uv and set the python version
      uses: astral-sh/setup-uv@v5
      with:
        python-version: ${{ matrix.python-version }}
        enable-cache: true
        cache-dependency-glob: "pyproject.toml"

    - name: Install dependencies with uv
      run: |
        uv pip install torch --extra-index-url https://download.pytorch.org/whl/cpu
        uv pip install -e .[dev]

    - name: Cache uv dependencies
      uses: actions/cache@v4
      with:
        path: ~/.cache/uv
        key: uv-${{ runner.os }}-${{ matrix.python-version }}-${{ hashFiles('pyproject.toml') }}
        restore-keys: |
          uv-${{ runner.os }}-${{ matrix.python-version }}-

    # - name: Cache testmon data
    #   uses: actions/cache@v4
    #   with:
    #     path: .testmondata
    #     key: testmon-${{ runner.os }}-${{ matrix.python-version }}-${{ github.ref }}
    #     restore-keys: |
    #       testmon-${{ runner.os }}-${{ matrix.python-version }}-

    # - name: Fix file permissions for testmondata
    #   run: |
    #     [ -f .testmondata ] && chmod u+w .testmondata || true

    - name: Run fast CPU tests with coverage
      run: uv run pytest -v -n auto -m "not slow and not gpu" --cov=sbi --cov-report=xml --splitting-algorithm least_duration --splits ${{ matrix.split_size }} --group ${{ matrix.group_number }} tests/ #--testmon-forceselect

    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v4
      with:
        env_vars: OS,PYTHON
        file: ./coverage.xml
        flags: unittests
        name: codecov-sbi-fast-cpu
        token: ${{ secrets.CODECOV_TOKEN }}
